<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
             http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials/>
        <oauth:password/>
    </oauth:authorization-server>

    <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/>
    <!--<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">-->
    <!--<constructor-arg ref="dataSource" />-->
    <!--</bean>-->

    <beans:bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="clientAuthenticationManager"/>
    </beans:bean>

    <authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService"/>
    </authentication-manager>

    <beans:bean id="clientDetailsUserService"
          class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetails"/>
    </beans:bean>

    <oauth:resource-server id="resourceServerFilter" resource-id="appApi" token-services-ref="tokenServices"/>

    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="clientDetailsService" ref="clientDetails"/>
        <beans:property name="accessTokenValiditySeconds" value="604800"/>
        <!-- 1 week -->
    </beans:bean>

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="my-trusted-client"
                      authorized-grant-types="password,authorization_code,refresh_token,implicit"
                      authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT" scope="read,write,trust"
                      access-token-validity="60"/>

        <oauth:client client-id="my-trusted-client-with-secret"
                      authorized-grant-types="password,authorization_code,refresh_token,implicit"
                      secret="somesecret" authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT"/>

        <oauth:client client-id="my-client-with-secret" authorized-grant-types="client_credentials"
                      authorities="ROLE_CLIENT"
                      scope="read" secret="secret"/>

        <oauth:client client-id="my-less-trusted-client" authorized-grant-types="authorization_code,implicit"
                      authorities="ROLE_CLIENT"/>

        <oauth:client client-id="my-less-trusted-autoapprove-client" authorized-grant-types="implicit"
                      authorities="ROLE_CLIENT" scope="read,write,trust"/>

        <oauth:client client-id="my-client-with-registered-redirect"
                      authorized-grant-types="authorization_code,client_credentials"
                      authorities="ROLE_CLIENT" redirect-uri="http://anywhere?key=value" scope="read,trust"/>

        <oauth:client client-id="my-untrusted-client-with-registered-redirect"
                      authorized-grant-types="authorization_code"
                      authorities="ROLE_CLIENT" redirect-uri="http://anywhere" scope="read"/>

        <oauth:client client-id="tonr" resource-ids="sparklr" authorized-grant-types="authorization_code,implicit"
                      authorities="ROLE_CLIENT" scope="read,write" secret="secret"/>

        <oauth:client client-id="app" resource-ids="appApi" scope="read,write"
                      authorized-grant-types="authorization_code,implicit" authorities="ROLE_CLIENT"/>
    </oauth:client-details-service>

</beans:beans>